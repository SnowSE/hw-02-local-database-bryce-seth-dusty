@page "/"
@using System.Text.Json
@using RazorClassLibrary.Services
@* @rendermode InteractiveServer *@

@inject ToDoRepository repo
@inject HttpClient client
@inject IService service

<h1>Hello, world!</h1>

Welcome to your new app.

@* <h3>Todo List : <span style="color: purple;">@accessType</span></h3>
 *@
 <button class="btn-primary" @onclick="Sync">SYNC</button>
<input @bind="newToDo" />
<button @onclick="AddTask">Add</button>
<button @onclick="GetAllTasks">Get All </button>
<input type="text" @bind="updatedToDo" />
<ul>
   
        @foreach (var myItem in onlineItems)
        {
            <p>id: @myItem.Id text: @myItem.Text</p>
            <button @onclick="() => DeleteToDo(myItem)">DELETE >:(</button>
            <button @onclick="() => UpdateToDo(myItem, updatedToDo)">Update</button>
        }
   
</ul>

@code {
    public List<ToDo> todos = new();
    public string statusMessage;
    public string updatedToDo;
    public List<ToDo> onlineItems = new();
    public string newToDo { get; set; } = "";
    public bool internet { get; set; } = false;

    public async void AddTask()
    {
        NetworkAccess accessType = Connectivity.Current.NetworkAccess;
        if(accessType == NetworkAccess.Internet) { internet = true; }
        await service.AddTodo(newToDo, internet);
    }

    public async void GetAllTasks()
    {
        NetworkAccess accessType = Connectivity.Current.NetworkAccess;
        if (accessType == NetworkAccess.Internet) { internet = true; }
        onlineItems = await service.GetAllTodos(internet);
    }

    public async void DeleteToDo(ToDo t)
    {
        NetworkAccess accessType = Connectivity.Current.NetworkAccess;
        if (accessType == NetworkAccess.Internet) { internet = true; }
        await service.DeleteTodo(t.Id, internet);
    }

    public async void UpdateToDo(ToDo t, string newtext)
    {
        NetworkAccess accessType = Connectivity.Current.NetworkAccess;
        if (accessType == NetworkAccess.Internet) { internet = true; }
        await service.UpdateTodo(t, newtext, internet);
    }

    public async void Sync()
    {
        onlineItems.Clear();
        await service.SyncDbs();
    }

}
