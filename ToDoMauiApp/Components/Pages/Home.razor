@page "/"
@* @rendermode InteractiveServer *@

@inject ToDoRepository repo
@using ToDoMauiApp.Models

<h1>Hello, world!</h1>

Welcome to your new app.

<h3>Todo List</h3>

<input @bind="newToDo" />
<button @onclick="AddTask">Add</button>
<button @onclick="GetAllTasks">Get All </button>
<ul>
    @foreach (ToDo t in todos)
    {
        <li>@t.Text  <button @onclick="() => DeleteToDo(t)">DELETE >:(</button><input type="text" @bind="updatedToDo" /><button @onclick="() => UpdateToDo(t, updatedToDo)">Update</button></li>
    }
</ul>

@code {
    public List<ToDo> todos = new();
    public string statusMessage;
    public string newToDo;
    public string updatedToDo;

    public async void AddTask()
    {
        await repo.AddNewToDo(newToDo);
        newToDo = string.Empty;
    }

    public async void GetAllTasks()
    {
        todos = await repo.GetAllTodos();
    }

    public async void DeleteToDo(ToDo t)
    {
        await repo.DeleteTodo(t);
        todos = await repo.GetAllTodos();
    }

    public async void UpdateToDo(ToDo t, string newtext)
    {
        await repo.UpdateTodo(t, updatedToDo);
    }

}
